    //
//  DriverListController.m
//  RacePad
//
//  Created by Gareth Griffith on 10/11/10.
//  Copyright 2010 SBG Racing Services Ltd. All rights reserved.
//

#import "DriverListController.h"
#import "DriverLapListController.h"

#import "RacePadCoordinator.h"
#import "RacePadTimeController.h"
#import "RacePadDatabase.h"
#import "TableData.h"


@implementation DriverListController

/*
 // The designated initializer.  Override if you create the controller programmatically and want to perform customization that is not appropriate for viewDidLoad.
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    if ((self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil])) {
        // Custom initialization
    }
    return self;
}
*/

/*
// Implement loadView to create a view hierarchy programmatically, without using a nib.
- (void)loadView
{
}
*/

// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.
- (void)viewDidLoad
{
	// Get a pointer to the associated view
	driver_list_view_ = (TableDataView *)[self view];
	
	// Set up the table data for SimpleListView
	[driver_list_view_ SetTableDataClass:[[RacePadDatabase Instance] driverListData]];
	
	[driver_list_view_ SetRowHeight:28];
	[driver_list_view_ SetHeading:true];
	
    [super viewDidLoad];
	
	// Tell the RacePadCoordinator that we're interested in data for this view
	[[RacePadCoordinator Instance] AddView:driver_list_view_ WithType:RPC_DRIVER_LIST_VIEW_];
	
	// Create a view controller for the driver lap times which may be displayed as an overlay
	driver_lap_list_controller_ = [[DriverLapListController alloc] initWithNibName:@"DriverLapListView" bundle:nil];
	driver_lap_list_controller_displayed_ = false;

}

- (void)viewWillAppear:(BOOL)animated;    // Called when the view is about to made visible. Default does nothing
{
	[[RacePadCoordinator Instance] SetViewDisplayed:driver_list_view_];
}

- (void)viewWillDisappear:(BOOL)animated; // Called when the view is dismissed, covered or otherwise hidden. Default does nothing
{
	[self HideDriverLapList];
	[[RacePadCoordinator Instance] SetViewHidden:driver_list_view_];
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Overriden to allow any orientation.
    return YES;
}


- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}


- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;

	[[RacePadCoordinator Instance] RemoveView:self];
}


- (void)dealloc
{
    [super dealloc];
}

////////////////////////////////////////////////////////////////////////////////

<<<<<<< .mine
- (bool) HandleSelectCellRow:(int)row Col:(int)col DoubleClick:(bool)double_click
=======
- (bool) HandleSelectRow:(int)row DoubleClick:(bool)double_click
>>>>>>> .r25
{
<<<<<<< .mine
	[self ShowDriverLapList];
	return true;
=======
	TableData *driverListData = [[RacePadDatabase Instance] driverListData];

	// TESTING MR
	// Look at our view's data to see if this is a DriverListView, or a DriverView
	TableData *viewData = [driver_list_view_ TableData];
	if ( viewData == driverListData ) {
		TableCell *cell = [driverListData cell:row Col:0];
		NSString *driver = [cell string];
		
		[[RacePadCoordinator Instance] requestDriverView:driver];
	} else {
		[[RacePadCoordinator Instance] requestDriverView:[viewData titleField:@"Next"]];
	}

	return true;
>>>>>>> .r25
}

- (bool) HandleSelectHeading
{
	[[RacePadTimeController Instance] displayInViewController:self];
	return true;
}

- (void)ShowDriverLapList
{
	if(driver_lap_list_controller_)
	{
		// Set the style for its presentation
		[self setModalTransitionStyle:UIModalTransitionStyleFlipHorizontal];
		[self setModalPresentationStyle:UIModalPresentationCurrentContext];
		
		// And present it
		[self presentModalViewController:driver_lap_list_controller_ animated:true];
		driver_lap_list_controller_displayed_ = true;
	}
}

- (void)HideDriverLapList
{
	if(driver_lap_list_controller_displayed_)
	{
		// Set the style for its animation
		[self setModalTransitionStyle:UIModalTransitionStyleFlipHorizontal];
		
		// And dismiss it
		[self dismissModalViewControllerAnimated:true];
		driver_lap_list_controller_displayed_ = false;
	}
}


- (IBAction)TestPressed:(id)sender
{
	int x = 0;
}


@end

